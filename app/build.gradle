plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "rachman.forniandi.workmanagerapp"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    //// Kotlin navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"
    // Jetpack Compose Integration
    implementation "androidx.navigation:navigation-compose:2.4.0-alpha09"


    //https://developer.android.com/jetpack/androidx/releases/room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"
    // optional - Test helpers
    testImplementation "androidx.room:room-testing:$room_version"


    //https://github.com/google/dagger
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    //https://github.com/ReactiveX/RxJava
    implementation "io.reactivex.rxjava3:rxjava:$rxjava_version"
    implementation "io.reactivex.rxjava3:rxandroid:$rxandroid_version"

    //https://developer.android.com/topic/libraries/architecture/paging/v3-overview
    implementation "androidx.work:work-runtime-ktx:$work_version"
    // alternatively - without Android dependencies for tests
    implementation "androidx.work:work-rxjava2:$work_version"
    // optional - RxJava3 support
    implementation "androidx.work:work-gcm:$work_version"
    // optional - Guava ListenableFuture support
    androidTestImplementation "androidx.work:work-testing:$work_version"
    // Jetpack Compose Integration
    implementation "androidx.work:work-multiprocess:$work_version"

    //https://square.github.io/retrofit/
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    //https://github.com/square/retrofit/tree/master/retrofit-adapters/rxjava3
    implementation "com.squareup.retrofit2:adapter-rxjava3:$retrofit_rxadaptor_version"



    //https://github.com/JakeWharton/timber
    implementation "com.jakewharton.timber:timber:$timber_version"
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}